---
import educations from "@data/educations"
---

<style>
    .education-row {
        @apply select-none;
    }
    .education-table {
        @apply overflow-hidden rounded-sm border border-catpuccin-teal;
    }

    .education-header {
        @apply flex cursor-pointer items-center justify-between border-b border-catpuccin-teal p-4 transition-colors hover:bg-catpuccin-teal;
    }

    .expand-button {
        @apply flex h-6 w-6 items-center justify-center border border-catpuccin-teal text-catpuccin-teal transition-colors hover:bg-teal-100 hover:text-catpuccin-base;
    }

    .list-items {
        @apply list-disc space-y-1 pl-5 text-sm text-catpuccin-text;
    }

    .education-details {
        @apply border-b bg-catpuccin-mantle transition-all duration-300 ease-in-out;
    }

    .badge {
        @apply border border-catpuccin-sky bg-catpuccin-surface-1 px-2 py-1 text-xs;
    }
</style>

<div class="education-table-container mx-auto">
    <div class="education-table">
        {educations.map((edu) => (
        <div class="education-row">
            <!-- Main Row (Always Visible) -->
            <div class="education-header group">
                <div
                    class="flex flex-col lg:grid lg:grid-cols-4 lg:items-center lg:text-center"
                >
                    <!-- Period -->
                    <div>
                        <span
                            class="font-semibold text-catpuccin-sky group-hover:text-catpuccin-base lg:text-lg"
                            >{`${edu.startPeriod} - ${edu.endPeriod}`}</span
                        >
                    </div>
                    <!-- School -->
                    <div class="">
                        <h3
                            class="text-lg text-white group-hover:text-catpuccin-base"
                        >
                            {edu.school}
                        </h3>
                        <span
                            class="text-sm text-catpuccin-subtext-0 group-hover:text-catpuccin-base"
                        >
                            {edu.title && `( ${edu.title} )`}
                        </span>
                    </div>

                    <!-- Major & TItle -->
                    <div class="">
                        <h3 class="group-hover:text-catpuccin-base lg:text-lg">
                            {`${edu.major}`}
                        </h3>
                    </div>

                    <!-- Location -->
                    <div class="">
                        <h3
                            class="text-catpuccin-text group-hover:text-catpuccin-base lg:text-lg"
                        >
                            {edu.location}
                        </h3>
                    </div>
                </div>

                <div class="">
                    <button
                        class="expand-button flex h-6 w-6 items-center justify-center border border-catpuccin-teal text-catpuccin-teal transition-colors hover:bg-teal-100 hover:text-catpuccin-base group-hover:border-catpuccin-overlay-0 group-hover:text-catpuccin-base"
                    >
                        <span class="plus-icon">+</span>
                        <span class="minus-icon hidden">-</span>
                    </button>
                </div>
            </div>

            <!-- Expanded Content (Hidden by Default) -->
            <div class="education-details hidden border-b bg-white">
                <div class="p-4 sm:p-6">
                    <div class="mb-4">
                        <h4 class="mb-1 font-medium">
                            {edu.title}
                        </h4>

                        <p class="text-sm text-catpuccin-surface-0 sm:hidden">
                            <span
                                class="font-semibold text-catpuccin-sky group-hover:text-catpuccin-base lg:text-lg"
                                >{`${edu.startPeriod} - ${edu.endPeriod}`}</span
                            >
                        </p>

                        <p class="text-xs text-catpuccin-text lg:text-base">
                            {edu.schoolDescription}
                        </p>
                    </div>

                    <!-- Responsibilities -->
                    <div class="mb-4">
                        <h5
                            class="mb-2 text-sm font-medium text-catpuccin-blue"
                        >
                            What i have achieved:
                        </h5>
                        <ul class="list-items">
                            {edu.description.map((item) => <li>{item}</li>)}
                        </ul>
                    </div>

                    <div>
                        <h5 class="mb-2 text-sm font-medium text-catpuccin-sky">
                            Skills:
                        </h5>
                        <div class="flex flex-wrap gap-2">
                            {
                                edu.skills.map((skill) => (
                                    <span class="badge">{skill}</span>
                                ))
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        ))}
    </div>
</div>

<script>
    // Handle expanding/collapsing rows
    document.addEventListener("DOMContentLoaded", () => {
        const rows = document.querySelectorAll(".education-row");

        rows.forEach((row) => {
            const header = row.querySelector(".education-header");
            const details = row.querySelector(".education-details");
            const plusIcon = row.querySelector(".plus-icon");
            const minusIcon = row.querySelector(".minus-icon");

            header?.addEventListener("click", () => {
                // Toggle the expanded state
                const isExpanded = details?.classList.contains("block");

                // Close all other rows first
                document
                    .querySelectorAll(".education-details")
                    .forEach((el) => {
                        el.classList.remove("block");
                        el.classList.add("hidden");
                    });

                document.querySelectorAll(".plus-icon").forEach((el) => {
                    el.classList.remove("hidden");
                });

                document.querySelectorAll(".minus-icon").forEach((el) => {
                    el.classList.add("hidden");
                });

                // If this row wasn't already expanded, expand it
                if (!isExpanded) {
                    details?.classList.remove("hidden");
                    details?.classList.add("block");
                    plusIcon?.classList.add("hidden");
                    minusIcon?.classList.remove("hidden");
                }
            });
        });
    });
</script>
