---
import CommandLine from "@components/CommandLine.astro";
import techStack, {
    categories,
    yearOfExperience,
    skillLevel,
} from "@data/skills";
---

<!-- Tech stack -->
<section id="tech-stack">
    <div>
        <CommandLine keyword="cd" text="~/tech-stack" />
        <CommandLine keyword="cat" text="skills.txt" />
        <!-- Output terminal -->
        <div class="my-4">
            <div class="text-lg font-medium text-catpuccin-green">
                tech stacks.
            </div>
            <div class="text-catpuccin-text">
                With 2.5 years of experience, this is my battle-ready weapon to
                create incredible software
            </div>
        </div>

        <CommandLine text="./view-skills.sh" />

        <div
            class="tabs-container my-4 border border-catpuccin-overlay-0 bg-catpuccin-mantle"
        >
            <!-- Tab Navigation -->
            <div class="flex flex-col border-b border-gray-700 sm:flex-row">
                {
                    categories.map((category, index) => (
                        <button
                            class="tab-button"
                            data-tab={index}
                            data-active={index === 0 ? "true" : "false"}
                        >
                            {index + 1} : {category.replace(" & ", "-")}
                        </button>
                    ))
                }
            </div>

            <!-- Tab Content -->
            {
                categories.map((category, index) => (
                    <div
                        class="tab-content p-4"
                        data-tab={index}
                        data-active={index === 0 ? "true" : "false"}
                    >
                        <div class="grid grid-cols-1 gap-3 font-spacemono sm:grid-cols-2 lg:grid-cols-3">
                            {techStack[category].map((tech) => (
                                <div class="tech-item cursor-default border border-catpuccin-green bg-catpuccin-mantle p-2">
                                    <div class="mb-1 flex justify-between">
                                        <span class="text-sm text-catpuccin-yellow">
                                            {tech.name}
                                        </span>
                                        <span class="text-xs text-catpuccin-sky">
                                            {tech.experienceTime} yrs of{" "}
                                            {yearOfExperience}
                                        </span>
                                    </div>
                                    <div class="terminal-progress text-sm text-catpuccin-subtext-0">
                                        <span>{skillLevel[tech.level]}</span>
                                        {tech.purpose && (
                                            <span> - {tech.purpose}</span>
                                        )}
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                ))
            }
        </div>

        <div>
            <CommandLine keyword="ls -al | grep" text="skills" />
            <!-- <div class="cursor"></div> -->
        </div>
    </div>
</section>

<script>
    // Tab functionality
    document.addEventListener("DOMContentLoaded", () => {
        const tabButtons = document.querySelectorAll(".tab-button");
        const tabContents = document.querySelectorAll(".tab-content");

        tabButtons.forEach((button) => {
            button.addEventListener("click", () => {
                const tabIndex = button.getAttribute("data-tab");

                // Update active states for buttons
                tabButtons.forEach((btn) =>
                    btn.setAttribute("data-active", "false"),
                );
                button.setAttribute("data-active", "true");

                // Update active states for content
                tabContents.forEach((content) =>
                    content.setAttribute("data-active", "false"),
                );
                document
                    .querySelector(`.tab-content[data-tab="${tabIndex}"]`)
                    ?.setAttribute("data-active", "true");
            });
        });
    });
</script>

<style>
    /* Terminal-inspired styling */
    .tab-button {
        @apply border-r border-catpuccin-overlay-0 px-4 py-1 text-sm font-medium text-catpuccin-sky transition-colors;
    }

    .tab-button:hover {
        @apply text-catpuccin-green;
    }

    .tab-button:focus {
        @apply bg-catpuccin-blue text-catpuccin-base outline-none;
    }

    .tab-button[data-active="true"] {
        @apply border-b-0 bg-catpuccin-crust text-catpuccin-green;
    }

    .tab-content {
        display: none;
    }

    .tab-content[data-active="true"] {
        display: block;
        animation: terminalFadeIn 0.2s ease-in-out;
    }

    @keyframes terminalFadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    /* Terminal cursor blink effect */
    .cursor {
        display: inline-block;
        width: 8px;
        height: 16px;
        background-color: #4ade80;
        animation: blink 1s step-end infinite;
        vertical-align: middle;
        margin-left: 2px;
    }

    @keyframes blink {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0;
        }
    }
</style>
